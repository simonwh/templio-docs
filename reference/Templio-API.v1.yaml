openapi: 3.0.0
info:
  title: Templio API
  version: '1.0'
  description: Use the /render endpoint to render your templates with Templio!
servers:
  - url: 'https://api.templioapp.com'
paths:
  /render:
    post:
      summary: ''
      operationId: post-render
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The rendered template result.
                required:
                  - result
              examples:
                example-application-json-render-result:
                  value:
                    result: <html>...</html>
            text/html:
              schema:
                type: string
              examples:
                example-text-html-render-result:
                  value: <html>...</html>
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example-400-bad-request:
                  value:
                    error: No template slug provided
      parameters:
        - schema:
            type: string
          in: query
          name: template-slug
          description: 'The `slug` of the template, found in "Template settings" in Templio.'
          required: true
        - schema:
            type: string
            default: application/json
            enum:
              - application/json
              - text/html
              - application/pdf
          in: header
          name: Accept
          description: The content type to be returned. `application/json` will return the rendered template within a `result` property. PDF is always returned base64 encoded.
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: 'The data, as json, to make available for the render.'
                language:
                  type: string
                  description: Language template should be rendered in (if you use translations)
                  default: en
                type:
                  type: string
                  description: 'Content-type for rendering, only relevant if Accept header is application/json.'
                  default: text/html
                  enum:
                    - text/html
                    - application/pdf
      description: 'Renders your template in the requested format, with the data provided.'
components:
  schemas: {}
  securitySchemes:
    Apikey:
      name: Authorization
      type: apiKey
      in: header
      description: ''
security:
  - Apikey: []
